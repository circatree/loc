# Docker-compose file is used only for local development. This is not production-ready example.

version: '3.8'

volumes:
  db-data: {}
  redis-data: {}
  tmp-data: {}
  log-data: {}

services:
  app: &app
    image: steveoliver/laravel-roadrunner:v0.1.2
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    user: "${APP_UID:-10001}:${APP_GID:-10001}"
    environment:
      PS1: '\[\033[1;32m\]\[\033[1;36m\][\u@\h] \[\033[1;34m\]\w\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'
      HOME: /tmp
      APP_DEBUG: 'true'
      APP_ENV: local
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      DB_CONNECTION: mysql
      DB_HOST: mariadb
      DB_DATABASE: forge
      DB_USERNAME: forge
      DB_PASSWORD: forge
      DB_PORT: 3306
      QUEUE_CONNECTION: redis
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      ZIPKIN_HOST: grafana-agent
      ZIPKIN_PORT: 9411
      TRACING_DRIVER: zipkin
      TRACING_SERVICE_NAME: laravel-roadrunner
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - tmp-data:/tmp:rw
      - .:/app:rw
      - ./storage/logs:/app/storage/logs
    depends_on:
      mariadb: {condition: service_healthy}
      redis: {condition: service_healthy}

  web:
    <<: *app
    command: rr serve -c .rr.local.yaml
    ports:
      - '8080:8080/tcp'
      - '8081:8081/tcp'
      - '8082:8082/tcp'
      - '8443:8443/tcp'
    # environment:
    healthcheck:
      test: ['CMD-SHELL', 'wget --spider -q "http://127.0.0.1:8082/health?plugin=http&plugin=rpc"']
      interval: 2s
      timeout: 2s

#  app-logs:
#    image: busybox
#    command: /bin/sh -c tail -f /app/storage/logs/laravel.log
#    volumes:
#      - app-logs:/app/storage/logs:ro

  queue:
    <<: *app
    command: php /app/artisan horizon

  cron:
    <<: *app
    command: supercronic /etc/supercronic/laravel # it runs artisan schedule:run

  mariadb:
    image: mariadb:latest # Image page: <https://hub.docker.com/_/mariadb>
    environment:
      MARIADB_USER: forge
      MARIADB_PASSWORD: forge
      MARIADB_DATABASE: forge
      MARIADB_ROOT_PASSWORD: forge
      MARIADB_PORT: 3306
    volumes:
      - db-data:/var/lib/mysql:rw
    ports:
      - '3306/tcp'
    healthcheck: # Healthcheck docs: <https://docs.docker.com/engine/reference/builder/#healthcheck>
      test: ['CMD-SHELL', "mysqladmin ping -P $$(echo $$MARIADB_PORT) -p$$(echo $$MARIADB_ROOT_PASSWORD) | grep 'mysqld is alive' || exit 1"]
      interval: 2s
      timeout: 5s
      start_period: 2s

  redis:
    image: redis:7-alpine # Image page: <https://hub.docker.com/_/redis>
    command: redis-server --requirepass redis_password
    volumes:
      - redis-data:/data:rw
    ports:
      - '6379/tcp'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 500ms
      timeout: 1s

  promtail:
    image: grafana/promtail:main
    command: -config.file=/etc/promtail/config.yaml
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - ./storage/logs:/app/storage/logs:ro
      - ./zscaler_root_ca.crt:/etc/ssl/certs/ca-certificates.crt

  grafana-agent:
    image: grafana/agent:v0.30.1
    # image: guildmortgage/grafana-agent:latest
    ports:
      - '4137/tcp'
      - '4318/tcp'
      - '8080/tcp'
      - '9411/tcp'
      - '9412/tcp'
      - '12345/tcp'
      - '12346/tcp'
    volumes:
      - ./grafana-agent-data:/etc/agent/data
      - ./grafana-agent-config.yaml:/etc/agent/agent.yaml
      # - ./zscaler_root_ca.crt:/etc/ssl/certs/ca-certificates.crt

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo-local.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "3200"
      - "14268"  # jaeger ingest
      - "9411"   # zipkin ingest
      - "4317"   # otel?
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  loki:
    image: grafana/loki:2.6.1
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3101:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://grafana-agent:14268/api/traces # send traces to Tempo
#      - JAEGER_ENDPOINT=http://localhost:57391/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9091:9090"
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  grafana:
    image: grafana/grafana:9.3.0
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3001:3000"
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
#
